package com.gnet.integration.repository.dynamo.Repos;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.Getter;
import lombok.Setter;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSecondaryPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import java.time.Instant;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

@DynamoDbBean
@Setter
public class QuoteRequest {
    private String quoteRequestId;
    private String vendorReferenceNumber;
    private String supplierId;
    private long b2bAccountDetailId;
    private long tripRequestId;

    @Getter
    private String payload;

    @Getter
    private String corePayload;

    @Getter
    private String response;

    @Setter
    private String createdOn;

    @JsonIgnore
    private Instant createdOnUTC;

    @JsonIgnore
    @Getter
    private long createdOnUTCUnix;

    @JsonIgnore
    private long createdOnUTCUnixDate;

    @DynamoDbPartitionKey
    public String getQuoteRequestId() {
        return quoteRequestId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "vendorReferenceNumber-index")
    public String getVendorReferenceNumber() {
        return vendorReferenceNumber;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "supplierId-index")
    public String getSupplierId() {
        return supplierId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "b2bAccountDetailId-index")
    public long getB2bAccountDetailId() {
        return b2bAccountDetailId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "tripRequestId-index")
    public long getTripRequestId() {
        return tripRequestId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "createdOn-index")
    public String getCreatedOn() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.now();
        this.createdOn = formatter.format(date);
        return this.createdOn;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "createdOnUTCUnixDate-index")
    public long getCreatedOnUTCUnixDate() {
        return this.createdOnUTCUnixDate;
    }

    @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)
    @DynamoDbAutoGeneratedTimestampAttribute
    public Instant getCreatedOnUTC() {
        return createdOnUTC;
    }
}
