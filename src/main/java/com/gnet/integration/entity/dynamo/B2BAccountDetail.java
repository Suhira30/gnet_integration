package com.gnet.integration.entity.dynamo;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.Getter;
import lombok.Setter;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSecondaryPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import java.time.Instant;

@DynamoDbBean
@Setter
public class B2BAccountDetail {
    private String supplierId;
    private long b2BAccountDetailId;

    @Getter
    private String b2bName;

    @Getter
    private String clientSecret;

    @JsonIgnore
    private Instant createdDate;

    @Getter
    private String groupKey;

    @Getter
    @JsonIgnore
    private Instant lastUpdatedOn;
    private String refreshToken;
    private String toB2BAccessToken;
    private String token;

    @Getter
    @Setter
    private String tokenDateTime;

    @DynamoDbPartitionKey
    public String getSupplierId() {
        return supplierId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "b2BAccountDetailId-index")
    public long getB2BAccountDetailId() {
        return b2BAccountDetailId;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "refreshToken-index")
    public String getRefreshToken() {
        return refreshToken;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "toB2BAccessToken-index")
    public String getToB2BAccessToken() {
        return toB2BAccessToken;
    }

    @DynamoDbSecondaryPartitionKey(indexNames = "token-index")
    public String getToken() {
        return token;
    }

    @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)
    @DynamoDbAutoGeneratedTimestampAttribute
    public Instant getCreatedDate() {
        return createdDate;
    }
}
